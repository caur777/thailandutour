# handlers/excursions/catalog.py
from aiogram import Router
from aiogram.types import CallbackQuery, FSInputFile, InlineKeyboardButton, InlineKeyboardMarkup
from aiogram.fsm.context import FSMContext

from config import MANAGER_USERNAME
from utils.loader import load_excursions
from keyboards.excursions import get_excursion_categories_keyboard
from utils.ux import show_screen_photo, show_screen_text

catalog_router = Router()

@catalog_router.callback_query(lambda cq: cq.data and cq.data.lower() == "show_catalog")
async def show_catalog_handler(query: CallbackQuery, state: FSMContext):
    photo = FSInputFile("static/excursions_cover.png")
    caption = (
        "üìã <b>–ö–∞—Ç–∞–ª–æ–≥ —Ç—É—Ä–æ–≤ –ø–æ –ü—Ö—É–∫–µ—Ç—É</b>\n\n"
        "–¢–æ–ª—å–∫–æ –ø—Ä–æ–≤–µ—Ä–µ–Ω–Ω—ã–µ –ø—Ä–æ–≥—Ä–∞–º–º—ã, –Ω–∞–¥—ë–∂–Ω—ã–µ –ø–∞—Ä—Ç–Ω—ë—Ä—ã –∏ –≤–Ω–∏–º–∞–Ω–∏–µ –∫ –¥–µ—Ç–∞–ª—è–º ‚Äî "
        "—á—Ç–æ–±—ã –≤—ã –º–æ–≥–ª–∏ –æ—Ç–¥—ã—Ö–∞—Ç—å —Å–ø–æ–∫–æ–π–Ω–æ.\n\n"
        "–í—ã–±–∏—Ä–∞–π—Ç–µ —Ç–æ, —á—Ç–æ –ø–æ –¥—É—à–µ, –∏ –±—Ä–æ–Ω–∏—Ä—É–π—Ç–µ –ø—Ä—è–º–æ –≤ –±–æ—Ç–µ.\n\n"
        f'–ï—Å—Ç—å –≤–æ–ø—Ä–æ—Å—ã ‚Äî <a href="https://t.me/{MANAGER_USERNAME}">–º—ã –≤—Å–µ–≥–¥–∞ –Ω–∞ —Å–≤—è–∑–∏</a> üí¨'
    )
    keyboard = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="üìÇ –ö–∞—Ç–∞–ª–æ–≥ —Ç—É—Ä–æ–≤", callback_data="show_catalog_list")],
        [InlineKeyboardButton(text="‚ÑπÔ∏è –í–∞–∂–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è", callback_data="important_menu")],
        [InlineKeyboardButton(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data="back")]
    ])

    await show_screen_photo(
        query, state,
        photo=photo,
        caption=caption,
        reply_markup=keyboard,
        parse_mode="HTML",
    )

@catalog_router.callback_query(lambda cq: cq.data == "show_catalog_list")
async def show_catalog_list(query: CallbackQuery, state: FSMContext):
    data = load_excursions()
    categories = data.get("category", []) if isinstance(data, dict) else []

    keyboard = get_excursion_categories_keyboard(categories)

    text = (
        "üåä –ú–æ—Ä—Å–∫–∏–µ —Ç—É—Ä—ã ‚Äî –ü—Ö–∏-–ü—Ö–∏, –æ—Å—Ç—Ä–æ–≤–∞, –±–µ–ª—ã–π –ø–µ—Å–æ–∫, –ø—Ä–æ–∑—Ä–∞—á–Ω—ã–µ –∫–∞—è–∫–∏.\n"
        "üèûÔ∏è –ù–∞–∑–µ–º–Ω—ã–µ —Ç—É—Ä—ã ‚Äî –ö—Ä–∞–±–∏, –ø–µ—â–µ—Ä—ã, –æ–∑–µ—Ä–æ –ß–µ–æ-–õ–∞–Ω.\n"
        "‚ö°Ô∏è –ü—Ä–∏–∫–ª—é—á–µ–Ω–∏—è ‚Äî —Ä–∞—Ñ—Ç–∏–Ω–≥, –±–∞–≥–≥–∏, –∑–∏–ø–ª–∞–π–Ω, —Å–ª–æ–Ω—ã (—ç—Ç–∏—á–Ω—ã–µ –ø–∞—Ä–∫–∏).\n\n"
        "–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é –Ω–∏–∂–µ üëá"
    )

    await show_screen_text(query, state, text, reply_markup=keyboard)